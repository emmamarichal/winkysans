{
glyphname = exclam;
kernLeft = KO_exclam;
kernRight = KO_exclam;
layers = (
{
hints = (
{
horizontal = 1;
place = (-5,120);
type = Stem;
},
{
place = (82.5,87);
type = Stem;
},
{
place = (67,120);
type = Stem;
}
);
layerId = m005;
shapes = (
{
closed = 1;
nodes = (
(133,200,o),
(165,217,o),
(169,240,cs),
(189,365,o),
(217,490,o),
(257,615,cs),
(266,646,o),
(237,667,o),
(209,667,cs),
(181,667,o),
(142,646,o),
(139,615,cs),
(125,490,o),
(101,365,o),
(67,240,cs),
(61,217,o),
(87,200,o),
(110,200,cs)
);
},
{
closed = 1;
nodes = (
(104,-10,o),
(141,20,o),
(150,60,cs),
(158,99,o),
(134,130,o),
(95,130,cs),
(55,130,o),
(18,99,o),
(10,60,cs),
(1,20,o),
(25,-10,o),
(65,-10,cs)
);
}
);
width = 240;
},
{
hints = (
{
horizontal = 1;
place = (-5,120);
type = Stem;
},
{
place = (83,87);
type = Stem;
},
{
place = (67,120);
type = Stem;
}
);
layerId = m002;
shapes = (
{
closed = 1;
nodes = (
(161,205,o),
(211,244,o),
(220,297,cs),
(240,421,o),
(260,462,o),
(299,585,cs),
(318,646,o),
(271,692,o),
(213,692,cs),
(155,692,o),
(88,646,o),
(81,585,cs),
(68,462,o),
(72,421,o),
(38,297,cs),
(25,244,o),
(59,205,o),
(110,205,cs)
);
},
{
closed = 1;
nodes = (
(120,-25,o),
(175,20,o),
(188,80,cs),
(201,139,o),
(164,185,o),
(105,185,cs),
(45,185,o),
(-9,139,o),
(-22,80,cs),
(-35,20,o),
(1,-25,o),
(61,-25,cs)
);
}
);
width = 252;
},
{
hints = (
{
horizontal = 1;
place = (-5,120);
type = Stem;
},
{
place = (82.5,87);
type = Stem;
},
{
place = (67,120);
type = Stem;
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(130,200,o),
(154,213,o),
(157,230,cs),
(177,355,o),
(210,501,o),
(249,626,cs),
(257,651,o),
(234,667,o),
(209,667,cs),
(184,667,o),
(155,651,o),
(151,626,cs),
(138,501,o),
(109,355,o),
(75,230,cs),
(70,213,o),
(90,200,o),
(110,200,cs)
);
},
{
closed = 1;
nodes = (
(98,-10,o),
(131,16,o),
(138,50,cs),
(145,83,o),
(124,110,o),
(91,110,cs),
(57,110,o),
(25,83,o),
(18,50,cs),
(11,16,o),
(31,-10,o),
(65,-10,cs)
);
}
);
width = 240;
}
);
metricLeft = "=period";
metricRight = "=period";
note = exclam;
unicode = 33;
userData = {
KernOnSpecialSpacing = {
L = "spaced-off";
};
};
}
